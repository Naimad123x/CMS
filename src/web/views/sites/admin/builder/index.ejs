<html lang="en">
<head>
  
    <title><%= siteName %></title>
    <link rel="stylesheet" href="/builder/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
    #saveBlocks {
    background-color: #4CAF50; /* Zielone tło */
    color: white; /* Biały tekst */
    border: 2px solid #4CAF50; /* Zielona ramka */
    padding: 10px 20px;
    transition: all 0.3s ease;
}

    #saveBlocks:hover {
    background-color: white; /* Białe tło podczas hoverowania */
    color: #4CAF50; /* Zielony tekst */
    border-color: #388E3C; /* Ciemniejsza zielona ramka */
}
      body {
          background: linear-gradient(to right, #6a11cb 10%, #2575fc 60%);
      }
  
      .header-row {
          display: flex;
          justify-content: space-between;
          align-items: center;
      }
  
      .header-title {
          flex-grow: 1;
          text-align: center;
      }
  
      h1 {
          font-size: 3.5em;
      }
  
      img {
          margin-right: 10px;
      }

      .header-row .text-end > div {
          color: #000000;
          margin-bottom: 5px;
          font-weight: bold;
          font-size: 16px;
      }

      .draggable {
          cursor: grab;
      }

      .droppable {
          border: 2px dashed #ccc;
          min-height: 100px;
      }

      /* Dodane style dla left-sidebar */
          left-sidebar h2, #left-sidebar li {
          border: 2px solid #000000; /* Zielona ramka */
          padding: 5px;
          margin-bottom: 5px;
      }
      
      #left-sidebar h2 {
          background-color: #e8f5e9; /* Jasnozielone tło */
      }
      
      #left-sidebar li {
          background-color: #f1f8e9; /* Bardziej delikatne tło dla elementów listy */
      }
  </style>
</head>
<body>
<div id="left-sidebar">
    <h2>Available Blocks</h2>
    <ul>
        <% blocks.forEach((block) => { %>
            <li class="draggable" data-type="<%= block.type %>" draggable="true"><%= block.type %></li>
        <% }); %>
    </ul>
</div>

<div id="main-content">
    <h1><%= siteName %> - Builder</h1>
    <div id="drop-area" class="droppable">
        <!-- Drag and drop area -->
    </div>
</div>

<div id="right-sidebar">
    <h2>Settings</h2>
    <div id="settings-panel">
        <button id="saveBlocks">SAVE CHANGES</button>
        <!-- Block settings will be loaded here -->
    </div>
</div>
<script src="/builder/script.js"></script>
<script>
  const btn = document.querySelector("#saveBlocks");

  btn.addEventListener("click", () => {
      const settingsPanel = document.querySelector("#settings-panel");
      // Poprawka: zmieniamy selektor z "#settings-block" na ".settings-block"
      const settingsBlocks = document.querySelectorAll(".settings-block");

      let newBlocks = [];
      for (const child of settingsPanel.children) {
          const settingsValues = {
              id: child.dataset.blockid,
              type: child.dataset.blocktype,
              options: {}
          };
          child.querySelectorAll("[id$='-input']").forEach(element => {
              const settingName = element.id.slice(0, -6);
              settingsValues.options[settingName] = element.value;
          })
          newBlocks.push(settingsValues);
      }
      newBlocks.shift();
      return sendSettingsValues(newBlocks.filter(a => a !== null && a.options !== null));
  });

  function sendSettingsValues(newBlocks) {
      fetch('/admin/builder/save', {
          headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
          },
          method: 'post',
          body: JSON.stringify(newBlocks)
      })
          .then(response => response.json())
          .then(text => {
              console.log(text);
              alert('Settings saved successfully!');
          })
          .catch(error => {
              console.error(error);
              alert('Failed to save settings.');
          });
  }
</script>
</body>
</html>
