<html lang="en">
<head>
    <title><%= siteName %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
      body {
            background: linear-gradient(to right, #6a11cb 10%, #2575fc 60%); /* Przykład gradientowego tła */
        }
        i {
            pointer-events: none;
        }

        .noselect {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
        .custom-update-btn {
        background-color: #4CAF50; /* Zielone tło */
        border-color: #4CAF50; /* Zielona ramka */
        color: white; /* Biały tekst */
    }
    .custom-update-btn:hover {
        background-color: #45a049; /* Ciemniejszy odcień zielonego dla hover */
        border-color: #45a049;
    }
    </style>
</head>
<body>
<div class="container text-center">
    <h1><%= siteName %> - Users</h1>
    <div class="row justify-content-center">
        <div class="col-2 mb-5 mt-5 align-self-center">
            <button id="refreshUsers" type="submit" class="btn btn-secondary">Refresh</button>
        </div>
        <div class="col-2 mb-5 mt-5 align-self-center">
          <a href="/admin" class="btn custom-update-btn">Back</a>
      </div>
        <div class="col-2 mb-5 mt-5 align-self-center">
            <button id="addUsers" type="submit" class="btn custom-update-btn" data-bs-toggle="modal" data-bs-target="#exampleModal">Add user</button>
        </div>
    </div>
    <div id="alertsArea"></div>
    <div class="row justify-content-center text-start">
        <div class="col-5 align-self-center">
            <ul class="list-group">
                <% users.forEach(user=>{ %>
                    <li class="list-group-item d-flex justify-content-between align-items-start">
                        <div class="ms-2 me-auto">
                            <div class="fw-bold"><%= user.username %></div>
                            <%= user.name %> <%= user.email %>
                            <div class="noselect">
                                <% if(user.username === reqUser.user) { %>
                                    <button class="btn btn-secondary btn-sm fs-6 noselect" data-action="change:<%=user.username%>"><i class="bi bi-pencil-square"></i></button>
                                <% }else{ %>
                                        <button class="btn btn-secondary btn-sm fs-6 noselect" data-action="regen:<%=user.username%>"><i class="bi bi-arrow-repeat"></i></button>
                                <% } %>
                                <button class="btn btn-danger btn-sm fs-6 noselect" data-action="delete:<%=user.username%>"><i class="bi bi-x-lg"></i></button>
                            </div>
                            <span class="position-absolute top-50 start-100 translate-middle p-2 <%= user.verified === 1 ? "bg-success" : "bg-danger"%> border border-light rounded-circle">
                                <span class="visually-hidden">verified</span>
                            </span>
                        </div>
                    </li>
                <% }) %>
            </ul>
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">New user</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newUserForm">
                    <div class="mb-3">
                        <label for="username" class="col-form-label">username:</label>
                        <input type="text" class="form-control" id="username" data-field="username" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="col-form-label">email:</label>
                        <input type="email" class="form-control" id="email" data-field="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="name" class="col-form-label">Name:</label>
                        <input type="text" class="form-control" id="name" data-field="name" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">Save user</button>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
  const refrshAdminUsers = function(){
    fetch("http://localhost:3000/api/v1/users/refresh",{
      method: "POST",
      headers: {
        "Content-Type": 'application/json',
      },
    })
      .then(raw => {location.reload()})
  }
    const refreshButton = document.querySelector("#refreshUsers")
    const newUserForm = document.querySelector("#newUserForm")
    const saveUserBtn = document.querySelector("#saveUserBtn")
    const alertArea = document.querySelector("#alertsArea")
    const regenBtns = [...document.querySelectorAll('[data-action]')];

    regenBtns.forEach(btn => btn.addEventListener('click', actionButton))

    function actionButton(btn){
      let button = btn.target
      console.log(button)
      let [action, username] = button.dataset.action.split(":");
      if(action==="change"){
        let newPass = prompt("Provide new password")
        fetch('http://localhost:3000/api/v1/users/password/change',{
          method: 'POST',
          headers: {
            "Content-Type": 'application/json',
          },
          body: JSON.stringify({username: username, password: newPass})
        })
          .then(raw => raw.json())
          .then(data => {
            console.log(data)
            alertArea.replaceWith(createAlert(data.success, data.message))
          })
      }else if (action==="delete"){
        fetch('http://localhost:3000/api/v1/users/',{
          method: 'DELETE',
          headers: {
            "Content-Type": 'application/json',
          },
          body: JSON.stringify({username: username})
        })
          .then(raw => raw.json())
          .then(data => {
            console.log(data);
            alertArea.replaceWith(createAlert(data.success, data.message))
          })
        location.reload()
      }else{
        fetch('http://localhost:3000/api/v1/users/password/regen',{
          method: 'POST',
          headers: {
            "Content-Type": 'application/json',
          },
          body: JSON.stringify({username: username})
        })
          .then(raw => raw.json())
          .then(data => {
            console.log(data);
            alertArea.replaceWith(createAlert(data.success, data.message))
          })
      }
      refrshAdminUsers()
    }

    function createAlert(success, message){
      const newAlert = document.createElement("div");
      newAlert.role = "alert"
      if(success) {
        newAlert.classList.add("alert", "alert-success");
        newAlert.innerHTML = message
      }
      else {
        newAlert.classList.add("alert", "alert-danger");
        newAlert.innerHTML = "Error! Message: "+message
      }
      return newAlert;
    }

    saveUserBtn.addEventListener("click", ()=>{
      const data = {}
      newUserForm.childNodes.forEach(child =>{
        if(child.childNodes.length < 1)
          return;
        child.childNodes.forEach(child =>{
          if(child?.dataset?.field) {
            let id = child.dataset.field
            data[id] = child.value
          }
        })
      })
      fetch('http://localhost:3000/api/v1/users/new',{
        method: 'POST',
        headers: {
          "Content-Type": 'application/json',
        },
        body: JSON.stringify(data)
      })
        .then((raw)=>{return raw.json()})
        .then((data)=>{
          console.log(data)
          alertArea.replaceWith(createAlert(data.success, data.message))
        })
    })

    refreshButton.addEventListener("click", refrshAdminUsers)
</script>
</body>
</html>